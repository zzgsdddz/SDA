CTL_unif <- function(n,m){
# Use replicate to generate n samples, each consisting of m draws from U(0, 1)
sample_means <- replicate(n, mean(runif(m)))
# Return the vector of sample means
return(sample_means)
}
# Set seed for reproducibility
set.seed(42)
# Generate sample means for n = 500, m = 30
means_30 <- CTL_unif(n = 500, m = 30)
# Generate sample means for n = 500, m = 200
means_200 <- CTL_unif(n = 500, m = 200)
# Define the parameters for the normal distribution
mean_theoretical <- 0.5
sd_30 <- sqrt(1 / (12 * 30))  # Standard deviation for m = 30
sd_200 <- sqrt(1 / (12 * 200))  # Standard deviation for m = 200
# Get dynamic ylim values based on the density range
ylim_30 <- c(0, max(density(means_30)$y, dnorm(mean_theoretical, mean = mean_theoretical, sd = sd_30)))
ylim_200 <- c(0, max(density(means_200)$y, dnorm(mean_theoretical, mean = mean_theoretical, sd = sd_200)))
# Plot the histograms side-by-side
par(mfrow = c(1, 2))  # Set up a 1x2 plotting layout
# Plot for m = 30
hist(means_30, prob = TRUE, xlim = c(0.3, 0.7), ylim = ylim_30,
main = "Histogram for m = 30", xlab = "Sample Mean")
curve(dnorm(x, mean = mean_theoretical, sd = sd_30), col = "blue", lwd = 2, add = TRUE)
# Plot for m = 200
hist(means_200, prob = TRUE, xlim = c(0.3, 0.7), ylim = ylim_200,
main = "Histogram for m = 200", xlab = "Sample Mean")
curve(dnorm(x, mean = mean_theoretical, sd = sd_200), col = "red", lwd = 2, add = TRUE)
# Reset the plotting layout
par(mfrow = c(1, 1))
data("airquality")
head(airquality)
# It isn't a good idea to use 'airquality$Ozone == NA' since NA represents a missing value and comparing with NA always gives NA. Thus we use .is.na()
NA_count <- sum(is.na(airquality$Ozone))
# calculate the proportion of missing values
NA_proportion <- NA_count / nrow(airquality)
NA_proportion
# na.rm = TRUE ensures a numerical output since it removes the missing values as it stands for na.remove
mean_ozone <- mean(airquality$Ozone, na.rm = TRUE)
mean_ozone
# remove all rows with a missing value
airquality_clean <- na.omit(airquality)
# remove the Day and Month columns
airquality_clean <- subset(airquality_clean, select = -c(Month, Day))
# make a summarry for every column
summary(airquality_clean)
# make the layout of boxplots a 2x2 grid
par(mfrow = c(2, 2))
# one by one plot all 4 of the boxplots
boxplot(airquality_clean$Ozone, main = "Ozone")
CTL_unif <- function(n,m){
# Use replicate to generate n samples, each consisting of m draws from U(0, 1)
sample_means <- replicate(n, mean(runif(m)))
# Return the vector of sample means
return(sample_means)
}
# Set seed for reproducibility
set.seed(42)
# Generate sample means for n = 500, m = 30
means_30 <- CTL_unif(n = 500, m = 30)
# Generate sample means for n = 500, m = 200
means_200 <- CTL_unif(n = 500, m = 200)
# Define the parameters for the normal distribution
mean_theoretical <- 0.5
sd_30 <- sqrt(1 / (12 * 30))  # Standard deviation for m = 30
sd_200 <- sqrt(1 / (12 * 200))  # Standard deviation for m = 200
# Get dynamic ylim values based on the density range
ylim_30 <- c(0, max(density(means_30)$y, dnorm(mean_theoretical, mean = mean_theoretical, sd = sd_30)))
ylim_200 <- c(0, max(density(means_200)$y, dnorm(mean_theoretical, mean = mean_theoretical, sd = sd_200)))
# Plot the histograms side-by-side
par(mfrow = c(1, 2))  # Set up a 1x2 plotting layout
# Plot for m = 30
hist(means_30, prob = TRUE, xlim = c(0.3, 0.7), ylim = ylim_30,
main = "Histogram for m = 30", xlab = "Sample Mean")
curve(dnorm(x, mean = mean_theoretical, sd = sd_30), col = "blue", lwd = 2, add = TRUE)
# Plot for m = 200
hist(means_200, prob = TRUE, xlim = c(0.3, 0.7), ylim = ylim_200,
main = "Histogram for m = 200", xlab = "Sample Mean")
curve(dnorm(x, mean = mean_theoretical, sd = sd_200), col = "red", lwd = 2, add = TRUE)
# Reset the plotting layout
par(mfrow = c(1, 1))
data("airquality")
head(airquality)
# It isn't a good idea to use 'airquality$Ozone == NA' since NA represents a missing value and comparing with NA always gives NA. Thus we use .is.na()
NA_count <- sum(is.na(airquality$Ozone))
# calculate the proportion of missing values
NA_proportion <- NA_count / nrow(airquality)
NA_proportion
# na.rm = TRUE ensures a numerical output since it removes the missing values as it stands for na.remove
mean_ozone <- mean(airquality$Ozone, na.rm = TRUE)
mean_ozone
# remove all rows with a missing value
airquality_clean <- na.omit(airquality)
# remove the Day and Month columns
airquality_clean <- subset(airquality_clean, select = -c(Month, Day))
# make a summarry for every column
summary(airquality_clean)
# make the layout of boxplots a 2x2 grid
par(mfrow = c(2, 2))
# one by one plot all 4 of the boxplots
boxplot(airquality_clean$Ozone, main = "Ozone")
boxplot(airquality_clean$Solar.R, main = "Solar Radiation")
boxplot(airquality_clean$Wind, main = "Wind")
boxplot(airquality_clean$Temp, main = "Temperature")
# reset layout
par(mfrow = c(1, 1))
# correlation between Ozone and Temp
cor(airquality_clean$Ozone, airquality_clean$Temp)
# correlation between square root of Ozone and Temp
cor(sqrt(airquality_clean$Ozone), airquality_clean$Temp)
# The correlation changes between these two and it is higher for sqrt Ozone vs Temp, thus that has a better correlation
# use a 1x2 grid so the plots are beside each other
par(mfrow = c(1, 2))
# plot Ozone vs Temp
plot(airquality_clean$Ozone, airquality_clean$Temp,
main = "Ozone vs Temp", xlab = "Ozone", ylab = "Temperature")
# plot sqrt Ozone vs Temp
plot(sqrt(airquality_clean$Ozone), airquality_clean$Temp,
main = "sqrt Ozone vs Temp", xlab = "sqrt Ozone", ylab = "Temperature")
# Both have a lot of variation but the second plot follows a line better so that one more closely resembles a linear relationship
CTL_unif <- function(n,m){
# Use replicate to generate n samples, each consisting of m draws from U(0, 1)
sample_means <- replicate(n, mean(runif(m)))
# Return the vector of sample means
return(sample_means)
}
# Set seed for reproducibility
set.seed(42)
# Generate sample means for n = 500, m = 30
means_30 <- CTL_unif(n = 500, m = 30)
# Generate sample means for n = 500, m = 200
means_200 <- CTL_unif(n = 500, m = 200)
# Define the parameters for the normal distribution
mean_theoretical <- 0.5
sd_30 <- sqrt(1 / (12 * 30))  # Standard deviation for m = 30
sd_200 <- sqrt(1 / (12 * 200))  # Standard deviation for m = 200
# Get dynamic ylim values based on the density range
ylim_30 <- c(0, max(density(means_30)$y, dnorm(mean_theoretical, mean = mean_theoretical, sd = sd_30)))
ylim_200 <- c(0, max(density(means_200)$y, dnorm(mean_theoretical, mean = mean_theoretical, sd = sd_200)))
# Plot the histograms side-by-side
par(mfrow = c(1, 2))  # Set up a 1x2 plotting layout
# Plot for m = 30
hist(means_30, prob = TRUE, xlim = c(0.3, 0.7), ylim = ylim_30,
main = "Histogram for m = 30", xlab = "Sample Mean")
curve(dnorm(x, mean = mean_theoretical, sd = sd_30), col = "blue", lwd = 2, add = TRUE)
# Plot for m = 200
hist(means_200, prob = TRUE, xlim = c(0.3, 0.7), ylim = ylim_200,
main = "Histogram for m = 200", xlab = "Sample Mean")
curve(dnorm(x, mean = mean_theoretical, sd = sd_200), col = "red", lwd = 2, add = TRUE)
# Reset the plotting layout
par(mfrow = c(1, 1))
data("airquality")
head(airquality)
# It isn't a good idea to use 'airquality$Ozone == NA' since NA represents a missing value and comparing with NA always gives NA. Thus we use .is.na()
NA_count <- sum(is.na(airquality$Ozone))
# calculate the proportion of missing values
NA_proportion <- NA_count / nrow(airquality)
NA_proportion
# na.rm = TRUE ensures a numerical output since it removes the missing values as it stands for na.remove
mean_ozone <- mean(airquality$Ozone, na.rm = TRUE)
mean_ozone
# remove all rows with a missing value
airquality_clean <- na.omit(airquality)
# remove the Day and Month columns
airquality_clean <- subset(airquality_clean, select = -c(Month, Day))
# make a summarry for every column
summary(airquality_clean)
# make the layout of boxplots a 2x2 grid
par(mfrow = c(2, 2))
# one by one plot all 4 of the boxplots
boxplot(airquality_clean$Ozone, main = "Ozone")
boxplot(airquality_clean$Solar.R, main = "Solar Radiation")
boxplot(airquality_clean$Wind, main = "Wind")
boxplot(airquality_clean$Temp, main = "Temperature")
# reset layout
par(mfrow = c(1, 1))
# correlation between Ozone and Temp
cor(airquality_clean$Ozone, airquality_clean$Temp)
# correlation between square root of Ozone and Temp
cor(sqrt(airquality_clean$Ozone), airquality_clean$Temp)
# The correlation changes between these two and it is higher for sqrt Ozone vs Temp, thus that has a better correlation
# use a 1x2 grid so the plots are beside each other
par(mfrow = c(1, 2))
# plot Ozone vs Temp
plot(airquality_clean$Ozone, airquality_clean$Temp,
main = "Ozone vs Temp", xlab = "Ozone", ylab = "Temperature")
# plot sqrt Ozone vs Temp
plot(sqrt(airquality_clean$Ozone), airquality_clean$Temp,
main = "sqrt Ozone vs Temp", xlab = "sqrt Ozone", ylab = "Temperature")
# Both have a lot of variation but the second plot follows a line better so that one more closely resembles a linear relationship
